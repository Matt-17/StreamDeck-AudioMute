name: Continuous Integration
on: [push, pull_request]
jobs:
  build:
    name: Build ${{matrix.os}}/${{matrix.build-type}}
    runs-on: ${{matrix.os}}-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: source
      - name: Make build directory
        run: cmake -E make_directory build
      - name: Configure
        working-directory: build
        run: |
          cmake ${{github.workspace}}\source `
            -DCMAKE_BUILD_TYPE=${{matrix.build-type}} `
            "-DCMAKE_INSTALL_PREFIX=${{github.workspace}}/com.fredemmott.micmutetoggle.sdPlugin"
      - name: Compile
        working-directory: build
        run: cmake --build . --config ${{matrix.build-type}} --parallel
      - name: Install
        working-directory: build
        run: cmake --install . --config ${{matrix.build-type}}
      - name: Checkout DistributionTool
        uses: actions/checkout@v2
        with:
          ref: distributiontool-v1.1
          path: distributiontool
      - name: Build .streamDeckPlugin
        run: |
          set +e
          ./distributiontool/DistributionTool.exe -b \
            -i com.fredemmott.micmutetoggle.sdPlugin \
            -o .
          if [ $? -eq 0 ]; then
            echo "Distribution tool failed"
            exit 1
          else
            set -e
            test -f com.fredemmott.micmutetoggle.streamDeckPlugin
          fi
        shell: bash
      - name: Upload .streamDeckPlugin
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.build-type}}-com.fredemmott.micmutetoggle.streamDeckPlugin
          path: com.fredemmott.micmutetoggle.streamDeckPlugin
    strategy:
      matrix:
        os: [windows]
        build-type: [Release, Debug]
  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: ${{runner.temp}}/artifacts
    - name: Display downloaded files
      run: ls -R
      working-directory: ${{runner.temp}}/artifacts
    - name: Create Draft Release
      id: create-release
      if: steps.ref.outputs.is-release == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_name: Release ${{ steps.ref.outputs.tag }}
        tag_name: ${{steps.ref.outputs.tag}}
        draft: true
    - name: Attach Release Build
      if: steps.ref.outputs.is-release == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ${{runner.temp}}/final/obs-streaming-remote-win64.zip
        asset_name: com.fredemmott.micemutetoggle.sdPlugin
        asset_content_type: application/octet-stream
